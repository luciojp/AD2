View(Diamonds)
View(diamonds)
diamantePorTipo = diamonds %>% group_by(cut) %>% count(cut)
View(diamantePorTipo)
diamantePorTipo = diamonds %>% group_by(cut) %>% summarise(quantidade = count(cut))
diamantePorTipo = diamonds %>% group_by(cut) %>% count(cut)
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity")
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
library(datasets)
theme_set(theme_bw())
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity")
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity") +
title(main = "Stopping Distance versus Speed")
title(main = "Stopping Distance versus Speed")
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity")
title(main = "Stopping Distance versus Speed")
ggplot(iris, aes(x = Species, y = Sepal.Width), main = "")+
geom_bar(stat = "identity")
title(main = "Stopping Distance versus Speed")
ggplot(iris, aes(x = Species, y = Sepal.Width), main = "aeae")+
geom_bar(stat = "identity")
title(main = "Stopping Distance versus Speed")
ggplot(iris, aes(x = Species, y = Sepal.Width,main = "aeae"))+
geom_bar(stat = "identity")
title(main = "Stopping Distance versus Speed")
ggplot(iris, aes(x = Species, y = Sepal.Width,main = ""))+
geom_bar(stat = "identity")
title(main = "Stopping Distance versus Speed")
ggplot(iris, aes(x = Species, y = Sepal.Width,main = ""))+
geom_bar(stat = "identity") +
title(main = "Stopping Distance versus Speed")
ggplot(iris, aes(x = Species, y = Sepal.Width,main = ""))+
geom_bar(stat = "identity") +
title(main = "Stopping Distance versus Speed")
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity")
title("Main Title", sub = "sub title",
cex.main = 2,   font.main= 4, col.main= "blue",
cex.sub = 0.75, font.sub = 3, col.sub = "red")
title("Main Title", sub = "sub title",
cex.main = 2,   font.main= 4, col.main= "blue",
cex.sub = 0.75, font.sub = 3, col.sub = "red")
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity")
ggplot(iris,main = "Eruptions of Old Faithful", aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity")
ggplot(iris, aes(x = Species, y = Sepal.Width), main = "Eruptions of Old Faithful")+
geom_bar(stat = "identity")
ggplot(iris, aes(x = Species, y = Sepal.Width,main = "Eruptions of Old Faithful"))+
geom_bar(stat = "identity")
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity") +
main = "Eruptions of Old Faithful"
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity") +
main = "lol"
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity") +
xlab = "lol"
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity") +
xlab = "lol"
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity") +
xlab("lol")
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity") +
main("lol")
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity") +
main("aaehaue")
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity") +
main = "ae"
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_bar(stat = "identity") +
ggtitle("Plant growth")
library(readr)
ano_atual <- read_csv("C:/Users/Lucio Dell/Downloads/ano-atual.csv")
View(ano_atual)
hchart(diamonds$cut, colorByPoint = TRUE, name = "Qualidade do corte do diamente")
library(magrittr)
library(highcharter)
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
library(datasets)
theme_set(theme_bw())
hchart(diamonds$cut, colorByPoint = TRUE, name = "Qualidade do corte do diamente")
hchart(diamonds$cut, colorByPoint = TRUE, name = "Quantidade de diamantes por corte")
hchart(diamonds$cut,  name = "Quantidade de diamantes por tipo de corte")
hchart(diamonds$cut, colorByPoint = TRUE, name = "Quantidade de diamantes por tipo de corte")
hchart(diamonds$price, color = "#B71C1C", name = "Price") %>%
hc_title(text = "You can zoom me")
diamantePorTipo = diamonds %>% group_by(price) %>% count(cut)
View(diamantePorTipo)
diamantePorTipo = diamonds %>% group_by(price) %>% count(cut)
View(diamantePorTipo)
diamantePorTipo = diamonds %>% group_by(price)
View(diamantePorTipo)
diamantePorTipo = diamonds %>% group_by(price)
View(diamantePorTipo)
View(diamonds)
highchart() %>%
hc_title(text = "Gráfico de dispersão com tamanho e cor") %>%
hc_add_series_scatter(mtcars$wt, mtcars$mpg,
mtcars$drat, mtcars$hp)
View(mtcars)
highchart() %>%
hc_title(text = "Gráfico de dispersão com tamanho e cor") %>%
hc_add_series_scatter(mtcars$wt, mtcars$mpg,
mtcars$drat, mtcars$hp, name = rownames(mtcars))
highchart() %>%
hc_title(text = "Gráfico de dispersão com tamanho e cor") %>%
hc_add_series_scatter(mtcars$wt, mtcars$mpg,
mtcars$drat, mtcars$hp)
highchart() %>%
hc_title(text = "Gráfico de dispersão com tamanho e cor") %>%
hc_add_series_scatter(mtcars$wt, mtcars$mpg,
mtcars$drat, mtcars$hp, showInLegend = TRUE)
highchart() %>%
hc_title(text = "Gráfico de dispersão com tamanho e cor") %>%
hc_add_series_scatter(mtcars$wt, mtcars$mpg,
mtcars$drat, mtcars$hp, showInLegend = FALSE)
highchart() %>%
hc_title(text = "Gráfico de dispersão com tamanho e cor") %>%
hc_add_series_scatter(mtcars$wt, mtcars$mpg,
mtcars$drat, mtcars$hp, color = mtcars$hp)
highchart() %>%
hc_title(text = "Gráfico de dispersão com tamanho e cor") %>%
hc_add_series_scatter(mtcars$wt, mtcars$mpg,
mtcars$drat, mtcars$hp)
highchart() %>%
hc_title(text = "Gráfico de dispersão com tamanho e cor") %>%
hc_add_series_scatter(mtcars$wt, mtcars$mpg,
mtcars$drat, mtcars$hp, label = TRUE)
highchart() %>%
hc_title(text = "Gráfico de dispersão com tamanho e cor") %>%
hc_add_series_scatter(mtcars$wt, mtcars$mpg,
mtcars$drat, mtcars$hp, label = TRUE)
highchart() %>%
hc_title(text = "Gráfico de dispersão com tamanho e cor") %>%
hc_add_series_scatter(mtcars$wt, mtcars$mpg,
mtcars$drat, mtcars$hp)
highchart() %>%
hc_title(text = "Gráfico de dispersão com tamanho e cor") %>%
hc_add_series_scatter(mtcars$wt, mtcars$mpg,
mtcars$drat, mtcars$hp, label = NULL)
highchart() %>%
hc_title(text = "Gráfico de dispersão com tamanho e cor") %>%
hc_add_series_scatter(mtcars$wt, mtcars$mpg,
mtcars$drat, mtcars$hp, label = TRUE)
highchart() %>%
hc_title(text = "Gráfico de dispersão com tamanho e cor") %>%
hc_add_series_scatter(mtcars$wt, mtcars$mpg,
mtcars$drat, mtcars$hp, label = mtcars$drat)
hcmap("countries/nz/nz-all")
hc <- highchart() %>%
hc_xAxis(categories = citytemp$month) %>%
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%
hc_add_series(name = "London", data = citytemp$london) %>%
hc_add_series(name = "Other city",
data = (citytemp$tokyo + citytemp$london)/2)
hc
View(citytemp)
highchart() %>%
hc_xAxis(categories = citytemp$month) %>%
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%
hc_add_series(name = "London", data = citytemp$london) %>%
hc_add_series(name = "Other city",
data = (citytemp$tokyo + citytemp$london)/2)
highchart() %>%
hc_xAxis(categories = citytemp$month) %>%
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%
hc_add_series(name = "Londres", data = citytemp$london) %>%
hc_add_series(name = "Outras cidades",
data = (citytemp$tokyo + citytemp$london)/2)
highchart() %>%
hc_xAxis(categories = citytemp$month) %>%  #O eixo x será os meses
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%  #
highchart() %>%
hc_xAxis(categories = citytemp$month) %>%  #O eixo x será os meses
hc_add_series(name = "Tokyo", data = citytemp$tokyo)
highchart() %>%
hc_xAxis(categories = citytemp$month) %>%  #O eixo x será os meses
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%  #adicionando a linha referente a ToKyo
hc_add_series(name = "Londres", data = citytemp$london)
highchart() %>%
hc_xAxis(categories = citytemp$month) %>%  #O eixo x será os meses
hc_add_series(name = "Tokyo", data = citytemp$tokyo)
highchart() %>%
hc_xAxis(categories = citytemp$month) %>%  #O eixo x será os meses
hc_add_series(name = "Tokyo", data = citytemp$tokyo)
highchart() %>%
hc_xAxis(categories = citytemp$month) %>%  #O eixo x será os meses
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%  #adicionando a linha referente a ToKyo
hc_add_series(name = "Londres", data = citytemp$london) %>%
hc_add_series(name = "Outras cidades",
data = (citytemp$tokyo + citytemp$london)/2) #realizando a médias das cidades restantes para plotar em uma única linha
hc <- highchart() %>%
hc_xAxis(categories = citytemp$month) %>%  #O eixo x será os meses
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%  #adicionando a linha referente a ToKyo
hc_add_series(name = "Londres", data = citytemp$london) %>%
hc_add_series(name = "Outras cidades",
data = (citytemp$tokyo + citytemp$london)/2) #realizando a médias das cidades restantes para plotar em uma única linha
hc
hc <- hc %>%
hc_chart(type = "column",
options3d = list(enabled = TRUE, beta = 15, alpha = 15))
hc
View(diamonds)
hcboxplot(x = diamonds$x, var = diamonds$color,
name = "Length", color = "#2980b9")
hc <- highchart() %>%
hc_xAxis(categories = citytemp$month) %>%  #O eixo x será os meses
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%  #adicionando a linha referente a ToKyo
hc_add_series(name = "Londres", data = citytemp$london) %>%
hc_add_series(name = "Outras cidades",
data = (citytemp$tokyo + citytemp$london)/2) #realizando a médias das cidades restantes para plotar em uma única linha
hc
hc %>% hc_add_theme(hc_theme_chalk())
library(magrittr)
library(highcharter)
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
library(datasets)
theme_set(theme_bw())
library(readr)
bittrexMarket <- read_csv("C:/Users/Lucio Dell/workspace/Bittrex/bittrexMarket.csv")
View(bittrexMarket)
bittrexMarket = read_csv("C:/Users/Lucio Dell/workspace/Bittrex/bittrexMarket.csv")
library(readr)
bittrexMarket = read_csv("C:/Users/Lucio Dell/workspace/Bittrex/bittrexMarket.csv")
View(bittrexMarket)
library(readr)
fullOrders <- read_csv("C:/Users/Lucio Dell/Downloads/fullOrders.csv")
View(fullOrders)
library(readr)
Bittrex_com_Order_History_1_ <- read_csv("C:/Users/Lucio Dell/Downloads/Bittrex.com - Order History (1).csv")
View(Bittrex_com_Order_History_1_)
library(readr)
dadosCEAP <- read_csv("~/UFCG/AD2/dadosCEAP.csv")
View(dadosCEAP)
View(dadosCEAP)
library(readr)
fullOrders_1_ <- read_csv("C:/Users/Lucio Dell/Downloads/fullOrders (1).csv")
View(fullOrders_1_)
library(readr)
ordens <- read_csv("C:/Users/Lucio Dell/Downloads/ordens.csv",
na = "0")
View(ordens)
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
library(datasets)
theme_set(theme_bw())
```{r}
ordens <- read_csv("C:/Users/Lucio Dell/Downloads/ordens.csv")
library(dplyr)
library(readr)
library(Amelia)
library(leaps)
library(ggplot2)
library(tidyr)
library(corrplot)
library(fBasics)
basicStats(eleicoes)[c("Mean", "Stdev", "Median", "Minimum", "Maximum", "nobs", "NAs"),]
eleicoes <- read.csv("eleicoes2014.csv", encoding = "latin1")
eleicoes <- read.csv("eleicoes2014.csv", encoding = "latin1")
library(dplyr)
library(readr)
library(Amelia)
library(leaps)
library(ggplot2)
library(tidyr)
library(corrplot)
library(fBasics)
eleicoes <- read.csv("eleicoes2014.csv", encoding = "latin1")
setwd("~/GitHub/AD2")
eleicoes <- read.csv("eleicoes2014.csv", encoding = "latin1")
basicStats(eleicoes)[c("Mean", "Stdev", "Median", "Minimum", "Maximum", "nobs", "NAs"),]
basicStats(eleicoes, 0.95)[c("Mean", "Stdev", "Median", "Minimum", "Maximum", "nobs", "NAs"),]
show(eleicoes)
library(fBasics)
library(knitr)
kable(eleicoes)
clear
clean
rowSums(is.na(eleicoes))
library(highcharter)
dadosComProblemas <- eleicoes %>% select(recursos_de_outros_candidatos.comites, recursos_de_partidos, recursos_de_pessoas_físicas, recursos_de_pessoas_juridicas, recursos_proprios)
View(dadosComProblemas)
hchart(dadosComProblemas)
highchart(dadosComProblemas)
highchart(dadosComProblemas$recursos_proprios)
highchart(eleicoes$recursos_proprios)
highchart() %>%
hc_add_series_boxplot(x = iris$Sepal.Length, by = iris$Species, name = "length")
highchart() %>%
hc_add_series_boxplot(dadosComProblemas)
highchart() %>%
hc_add_series_boxplot(dadosComProblemas$recursos_de_outros_candidatos.comites)
highchart() %>%
hc_add_series_boxplot(dadosComProblemas$recursos_de_outros_candidatos.comites, by = dadosComProblemas)
summary(dadosComProblemas)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
eleicoes$recursos_de_outros_candidatos.comites[is.na(eleicoes$recursos_de_outros_candidatos.comites)]<-median (eleicoes$recursos_de_outros_candidatos.comites, na.rm = TRUE)
eleicoes$recursos_proprios[is.na(eleicoes$recursos_proprios)]<-median (eleicoes$recursos_proprios, na.rm = TRUE)
eleicoes$recursos_de_pessoas_físicas[is.na(eleicoes$recursos_de_pessoas_físicas)]<-median (eleicoes$recursos_de_pessoas_físicas, na.rm = TRUE)
eleicoes$recursos_de_pessoas_juridicas[is.na(eleicoes$recursos_de_pessoas_juridicas)]<-median (eleicoes$recursos_de_pessoas_juridicas, na.rm = TRUE)
eleicoes$recursos_de_partidos[is.na(eleicoes$recursos_de_partidos)]<-median (eleicoes$recursos_de_partidos, na.rm = TRUE)
View(eleicoes)
dadosFiltrados <- eleicoes %>% select(-nome, -sequencial_candidato, -numero_cadidato, -cargo)
View(dadosFiltrados)
dadosFiltrados[,'sexo'] <- as.numeric(as.character(dadosFiltrados[,'sexo']))
View(dadosFiltrados)
dadosFiltrados <- eleicoes %>% select(-nome, -sequencial_candidato, -numero_cadidato, -cargo)
indx <- sapply(dadosFiltrados, is.factor)
dadosFiltrados[indx] <- lapply(dadosFiltrados[indx], function(x) as.numeric(as.character(x)))
dadosFiltrados <- eleicoes %>% select(-nome, -sequencial_candidato, -numero_cadidato, -cargo)
dadosFiltrados <- eleicoes %>% select(-nome, -sequencial_candidato, -numero_cadidato, -cargo)
as.numeric(as.character(dadosFiltrados))
View(dadosFiltrados)
as.numeric(dadosFiltrados$sexo)
dadosFiltrados$sexo <- as.numeric(dadosFiltrados$sexo)
as.numeric(dadosFiltrados$grau)
#Transformando variável grau (nível de estudo), onde:
#1 = Ensino Fundamental Completo ;   2 = Ens. Fund. Incomp.  ; 3 = Ens. Médio Comp.; 4 = Ens. Médio Incomp.
#5 = Lê e escreve ; 6 = Sup. Completo  ; 7 = Superior Incompleto.
dadosFiltrados$grau <- as.numeric(dadosFiltrados$grau)
as.numeric(dadosFiltrados$estado_civil)
as.numeric(dadosFiltrados$estado_civil)
View(dadosFiltrados)
#Transformando variável estado civil em numérica, onde:
#1= Casado ; 2= Divorciado(a) ; 3= Separado(a) judicialmente ; 4= Solteiro(a) ; 5 = Viúvo(a)
dadosFiltrados$estado_civil <-as.numeric(dadosFiltrados$estado_civil)
#1 = AC, 2 = AL, 3 = AM, 4 = AP, 5 = BA, 6 = CE, 7= DF, 8=ES, 9=GO, 10=MA, 11=MG, 12=MS, 13=MT,
#14=PA, 15=PB, 16=PE, 17=PI, 18=PR, 19=RJ, 20=RN, 21=RO, 22=RR, 23=RS, 24=SC, 25=SE, 26=SP,27=TO
dadosFiltrados$UF <-as.numeric(dadosFiltrados$UF)
summary(dadosFiltrados$partido)
#1=DEM, 2=PC do B, 3=PCB, 4=PCO, 5=PDT, 6=PEN, 7=PHS, 8=PMDB, 9 =PMN, 10=PP, 11=PPL, 12=PPS, 13=PR, 14=PRB, 15=PROS, #16=PRP, 17=PRTB, 18=PSB, 19=PSC, 20=PSD, 21=PSDB, 22=PSDC, 23=PSL, 24=PSOL, 25=PSTU, 26=PT, 27=PT do B, 28=PTB, #29=PTC, 30=PTN, 31=PV, 32=SD
dadosFiltrados$partido <-as.numeric(dadosFiltrados$partido)
#Retirados as colunas que não são necessárias
dadosFiltrados <- eleicoes %>% select(-nome, -sequencial_candidato, -numero_cadidato, -cargo, -setor_economico_receita, -setor_economico_despesa)
#Transformando variável sexo em numérica, onde Feminino=1 e Masculino=2
dadosFiltrados$sexo <- as.numeric(dadosFiltrados$sexo)
#Transformando variável grau (nível de estudo), onde:
#1 = Ensino Fundamental Completo ;   2 = Ens. Fund. Incomp.  ; 3 = Ens. Médio Comp.; 4 = Ens. Médio Incomp.
#5 = Lê e escreve ; 6 = Sup. Completo  ; 7 = Superior Incompleto.
dadosFiltrados$grau <- as.numeric(dadosFiltrados$grau)
#Transformando variável estado civil em numérica, onde:
#1= Casado ; 2= Divorciado(a) ; 3= Separado(a) judicialmente ; 4= Solteiro(a) ; 5 = Viúvo(a)
dadosFiltrados$estado_civil <-as.numeric(dadosFiltrados$estado_civil)
#1 = AC, 2 = AL, 3 = AM, 4 = AP, 5 = BA, 6 = CE, 7= DF, 8=ES, 9=GO, 10=MA, 11=MG, 12=MS, 13=MT,
#14=PA, 15=PB, 16=PE, 17=PI, 18=PR, 19=RJ, 20=RN, 21=RO, 22=RR, 23=RS, 24=SC, 25=SE, 26=SP,27=TO
dadosFiltrados$UF <-as.numeric(dadosFiltrados$UF)
#1=DEM, 2=PC do B, 3=PCB, 4=PCO, 5=PDT, 6=PEN, 7=PHS, 8=PMDB, 9 =PMN, 10=PP, 11=PPL, 12=PPS, 13=PR, 14=PRB, 15=PROS, #16=PRP, 17=PRTB, 18=PSB, 19=PSC, 20=PSD, 21=PSDB, 22=PSDC, 23=PSL, 24=PSOL, 25=PSTU, 26=PT, 27=PT do B, 28=PTB, #29=PTC, 30=PTN, 31=PV, 32=SD
dadosFiltrados$partido <-as.numeric(dadosFiltrados$partido)
summary(dadosFiltrados$partido)
t.test (dadosFiltrados$UF,dadosFiltrados$votos)
t.test (dadosSemVotos,dadosFiltrados$votos)
dadosSemVotos <- dadosFiltrados %>% select(-votos)
t.test (dadosSemVotos,dadosFiltrados$votos)
t.test (dadosFiltrados$UF,dadosFiltrados$votos)
t.test (dadosFiltrados$partido,dadosFiltrados$partido)
t.test (dadosFiltrados$partido,dadosFiltrados$votos)
summary(dadosFiltrados)
t.test (dadosFiltrados$UF,dadosFiltrados$votos)
t.test (dadosFiltrados$partido,dadosFiltrados$votos)
t.test (dadosFiltrados$quantidade_doacoes,dadosFiltrados$votos)
t.test (dadosFiltrados$quantidade_doadores,dadosFiltrados$votos)
t.test (dadosFiltrados$total_receita,dadosFiltrados$votos)
t.test (dadosFiltrados$media_receita,dadosFiltrados$votos)
t.test (dadosFiltrados$recursos_de_outros_candidatos.comites,dadosFiltrados$votos)
t.test (dadosFiltrados$recursos_de_partidos,dadosFiltrados$votos)
t.test (dadosFiltrados$recursos_de_pessoas_físicas,dadosFiltrados$votos)
t.test (dadosFiltrados$UF,dadosFiltrados$votos)
t.test (dadosFiltrados$partido,dadosFiltrados$votos)
t.test (dadosFiltrados$quantidade_doacoes,dadosFiltrados$votos)
t.test (dadosFiltrados$quantidade_doadores,dadosFiltrados$votos)
t.test (dadosFiltrados$total_receita,dadosFiltrados$votos)
t.test (dadosFiltrados$media_receita,dadosFiltrados$votos)
t.test (dadosFiltrados$recursos_de_outros_candidatos.comites,dadosFiltrados$votos)
t.test (dadosFiltrados$recursos_de_partidos,dadosFiltrados$votos)
t.test (dadosFiltrados$recursos_de_pessoas_físicas,dadosFiltrados$votos)
t.test (dadosFiltrados$recursos_de_pessoas_juridicas,dadosFiltrados$votos)
t.test (dadosFiltrados$recursos_proprios,dadosFiltrados$votos)
t.test (dadosFiltrados$quantidade_despesas,dadosFiltrados$votos)
t.test (dadosFiltrados$quantidade_fornecedores,dadosFiltrados$votos)
t.test (dadosFiltrados$total_despesa,dadosFiltrados$votos)
t.test (dadosFiltrados$media_despesa,dadosFiltrados$votos)
t.test (dadosFiltrados$idade,dadosFiltrados$votos)
t.test (dadosFiltrados$UF,dadosFiltrados$votos)
t.test (dadosFiltrados$partido,dadosFiltrados$votos)
t.test (dadosFiltrados$quantidade_doacoes,dadosFiltrados$votos)
t.test (dadosFiltrados$quantidade_doadores,dadosFiltrados$votos)
t.test (dadosFiltrados$total_receita,dadosFiltrados$votos)
t.test (dadosFiltrados$media_receita,dadosFiltrados$votos)
t.test (dadosFiltrados$recursos_de_outros_candidatos.comites,dadosFiltrados$votos)
t.test (dadosFiltrados$recursos_de_partidos,dadosFiltrados$votos)
t.test (dadosFiltrados$recursos_de_pessoas_físicas,dadosFiltrados$votos)
t.test (dadosFiltrados$recursos_de_pessoas_juridicas,dadosFiltrados$votos)
t.test (dadosFiltrados$recursos_proprios,dadosFiltrados$votos)
t.test (dadosFiltrados$quantidade_despesas,dadosFiltrados$votos)
t.test (dadosFiltrados$quantidade_fornecedores,dadosFiltrados$votos)
t.test (dadosFiltrados$total_despesa,dadosFiltrados$votos)
t.test (dadosFiltrados$media_despesa,dadosFiltrados$votos)
t.test (dadosFiltrados$idade,dadosFiltrados$votos)
t.test (dadosFiltrados$sexo,dadosFiltrados$votos)
t.test (dadosFiltrados$grau,dadosFiltrados$votos)
t.test (dadosFiltrados$estado_civil,dadosFiltrados$votos)
corr = cor(dadosFiltrados[, 1:20])
round(corr, 2)
corrplot(corr, method="circle")
dadosFiltrados <- dadosFiltrados %>% select(-total_despesa, -quantidade_despesas)
summary(dadosFiltrados)
modeloFiltrado <- lm(funcao = votos ~ ., dadosFiltrados, na.action = na.omit)
modeloFiltrado <- lm(formula = votos ~ ., dadosFiltrados, na.action = na.omit)
summary(modeloFiltrado)
modeloCompleto <- lm(formula = votos ~ ., eleicoes, na.action = na.omit)
summary(modeloFiltrado)
modeloFiltrado <- lm(formula = votos ~ ., dadosFiltrados, na.action = na.omit)
summary(modeloFiltrado)
modeloFiltrado <- lm(formula = votos ~ ., dadosFiltrados, na.action = na.omit)
summary(modeloFiltrado)
modeloCompleto <- lm(formula = votos ~ ., eleicoes, na.action = na.omit)
summary(modeloFiltrado)
modeloCompleto <- lm(formula = votos ~ ., eleicoes, na.action = na.omit)
summary(modeloCompleto)
modeloCompleto <- lm(formula = votos ~ ., eleicoes, na.action = na.omit)
summary(modeloCompleto)
modeloCompleto <- lm(formula = votos ~ ., eleicoes, na.action = na.omit)
modeloFiltrado <- lm(formula = votos ~ ., dadosFiltrados, na.action = na.omit)
View(eleicoes)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(dplyr)
library(readr)
library(Amelia)
library(leaps)
library(ggplot2)
library(tidyr)
library(corrplot)
library(fBasics)
library(knitr)
library(highcharter)
library(dplyr)
library(readr)
library(leaps)
library(ggplot2)
library(tidyr)
library(corrplot)
library(fBasics)
library(knitr)
library(highcharter)
eleicoes <- read.csv("eleicoes2014.csv", encoding = "latin1")
dadosComProblemas <- eleicoes %>% select(recursos_de_outros_candidatos.comites, recursos_de_partidos, recursos_de_pessoas_físicas, recursos_de_pessoas_juridicas, recursos_proprios)
summary(dadosComProblemas)
eleicoes$recursos_de_outros_candidatos.comites[is.na(eleicoes$recursos_de_outros_candidatos.comites)]<-median (eleicoes$recursos_de_outros_candidatos.comites, na.rm = TRUE)
eleicoes$recursos_proprios[is.na(eleicoes$recursos_proprios)]<-median (eleicoes$recursos_proprios, na.rm = TRUE)
eleicoes$recursos_de_pessoas_físicas[is.na(eleicoes$recursos_de_pessoas_físicas)]<-median (eleicoes$recursos_de_pessoas_físicas, na.rm = TRUE)
eleicoes$recursos_de_pessoas_juridicas[is.na(eleicoes$recursos_de_pessoas_juridicas)]<-median (eleicoes$recursos_de_pessoas_juridicas, na.rm = TRUE)
eleicoes$recursos_de_partidos[is.na(eleicoes$recursos_de_partidos)]<-median (eleicoes$recursos_de_partidos, na.rm = TRUE)
#Retirados as colunas que não são necessárias
dadosFiltrados <- eleicoes %>% select(-nome, -sequencial_candidato, -numero_cadidato, -cargo, -setor_economico_receita, -setor_economico_despesa)
#Transformando variável sexo em numérica, onde Feminino=1 e Masculino=2
dadosFiltrados$sexo <- as.numeric(dadosFiltrados$sexo)
#Transformando variável grau (nível de estudo), onde:
#1 = Ensino Fundamental Completo ;   2 = Ens. Fund. Incomp.  ; 3 = Ens. Médio Comp.; 4 = Ens. Médio Incomp.
#5 = Lê e escreve ; 6 = Sup. Completo  ; 7 = Superior Incompleto.
dadosFiltrados$grau <- as.numeric(dadosFiltrados$grau)
#Transformando variável estado civil em numérica, onde:
#1= Casado ; 2= Divorciado(a) ; 3= Separado(a) judicialmente ; 4= Solteiro(a) ; 5 = Viúvo(a)
dadosFiltrados$estado_civil <-as.numeric(dadosFiltrados$estado_civil)
#1 = AC, 2 = AL, 3 = AM, 4 = AP, 5 = BA, 6 = CE, 7= DF, 8=ES, 9=GO, 10=MA, 11=MG, 12=MS, 13=MT,
#14=PA, 15=PB, 16=PE, 17=PI, 18=PR, 19=RJ, 20=RN, 21=RO, 22=RR, 23=RS, 24=SC, 25=SE, 26=SP,27=TO
dadosFiltrados$UF <-as.numeric(dadosFiltrados$UF)
#1=DEM, 2=PC do B, 3=PCB, 4=PCO, 5=PDT, 6=PEN, 7=PHS, 8=PMDB, 9 =PMN, 10=PP, 11=PPL, 12=PPS, 13=PR, 14=PRB, 15=PROS, #16=PRP, 17=PRTB, 18=PSB, 19=PSC, 20=PSD, 21=PSDB, 22=PSDC, 23=PSL, 24=PSOL, 25=PSTU, 26=PT, 27=PT do B, 28=PTB, #29=PTC, 30=PTN, 31=PV, 32=SD
dadosFiltrados$partido <-as.numeric(dadosFiltrados$partido)
dadosFiltradosCompletos <- dadosFiltrados
t.test (dadosFiltrados$quantidade_despesas,dadosFiltrados$votos)
corrplot(corr, method="circle")
corr = cor(dadosFiltrados[, 1:20])
round(corr, 2)
corrplot(corr, method="circle")
dadosFiltrados <- dadosFiltrados %>% select(-total_despesa, -quantidade_despesas)
modeloCompleto <- lm(formula = votos ~ ., eleicoes, na.action = na.omit)
summary(modeloCompleto)
modeloCompleto <- lm(formula = votos ~ ., dadosFiltradosCompletos, na.action = na.omit)
summary(modeloCompleto)
modeloFiltrado <- lm(formula = votos ~ ., dadosFiltrados, na.action = na.omit)
summary(modeloFiltrado)
ggplot(dadosFiltrados, aes(x = .fitted, y = .resid)) +
geom_point() +
xlab("Fitted") +
ylab("Residuals")
library(dplyr)
library(readr)
library(Amelia)
library(leaps)
library(ggplot2)
library(tidyr)
library(corrplot)
library(fBasics)
library(knitr)
library(highcharter)
ggplot(dadosFiltrados, aes(x = .fitted, y = .resid)) +
geom_point() +
xlab("Fitted") +
ylab("Residuals")
